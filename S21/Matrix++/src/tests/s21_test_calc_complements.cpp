#include "s21_test.h"

TEST(MatrixCalcComplementsTest, CalcComplements1) {
  S21Matrix matrix(1, 1);
  double *arr1 = new double[1]{-4.100814729844436};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 1);
  double *arr2 = new double[1]{-4.100814729844436};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements2) {
  S21Matrix matrix(1, 1);
  double *arr1 = new double[1]{3.2499618502707968};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 1);
  double *arr2 = new double[1]{3.2499618502707968};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements3) {
  S21Matrix matrix(5, 4);
  double *arr1 = new double[20]{
      -0.5023131802169303,  4.680207644142067,   0.9447236877721696,
      -0.718887457021971,   4.007950006814733,   -4.836885494171879,
      2.539870850235099,    3.6871260271596267,  4.503573248051007,
      -2.8230442726515683,  2.6625794746144926,  0.3273745129246377,
      -0.42265120792172617, -2.9169472474500346, 0.8366318328603359,
      -0.5727362636195297,  -1.0487073820132387, -1.5308687502508111,
      0.833391121445711,    1.0801030110911984};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 4);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements4) {
  S21Matrix matrix(5, 5);
  double *arr1 = new double[25]{
      0.6047165643308228,  1.3884844030570145,  -2.3378044640405893,
      0.45722855499741577, -1.8200778298410727, -0.8090513669837076,
      -3.8609679198274205, -1.475394844946333,  3.8555853295747884,
      4.72325236043735,    3.693138788681921,   0.7864587217118837,
      0.3852820719660688,  -3.786721101230256,  -1.3822390663852246,
      -1.391800246236905,  1.8136843296400595,  -1.5917495172806264,
      4.029365107601269,   -4.05667905416517,   -1.262702537718691,
      -1.7387234512582914, -2.0186067867585744, 1.6117478490357042,
      -1.5782432002308178};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 5);
  double *arr2 = new double[25]{
      -48.81435839519312,  156.00759163397825,  -249.85068826192418,
      -79.25248003411537,  105.8133732659594,   110.89129960615782,
      -30.811806813457043, -0.5426634947060884, 88.46145469918781,
      36.25770045930497,   195.80911881603942,  -93.32734517181284,
      64.04075210393223,   61.5002196875579,    -72.94723497380133,
      114.3842111087418,   -8.091497775864209,  110.63382007141045,
      147.82968184841653,  -73.13598118765012,  -77.34012273040466,
      -169.58893663479074, -53.9466719124761,   -77.70293170163959,
      -105.29861546168304};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements5) {
  S21Matrix matrix(7, 1);
  double *arr1 =
      new double[7]{2.189093985752516, -4.809652260440108,  1.529650770925869,
                    4.314703617905835, -2.1055723388750924, 1.8366973743977404,
                    3.528430346235112};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 1);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements6) {
  S21Matrix matrix(1, 1);
  double *arr1 = new double[1]{-0.44118446304743575};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 1);
  double *arr2 = new double[1]{-0.44118446304743575};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements7) {
  S21Matrix matrix(3, 3);
  double *arr1 = new double[9]{
      1.623926404295581,   4.451434740678499,    1.9579516059858406,
      -3.5076144686172284, 1.2543598371231788,   1.156875181167642,
      -3.0450530332724757, -0.36226225492409636, 0.025541455752486897};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 3);
  double *arr2 = new double[9]{
      0.45113038807309086, -3.433156699785204, 5.090268553652767,
      -0.8229880872808092, 6.003543921208509,  -12.966567618466641,
      2.693778514498909,   -8.746419535180639, 17.650904962501514};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements8) {
  S21Matrix matrix(8, 5);
  double *arr1 = new double[40]{
      -2.4929649852920854, -2.9697140592379467, -4.636844833370718,
      3.104407307533096,   1.0912119390021635,  4.505605053139865,
      -3.3591036080623757, 3.534652632326976,   2.4296028359837942,
      -1.1917361373220912, 1.0968547590763036,  -0.2514999029702025,
      0.23535602857678217, 2.0871011347883783,  -3.6190344466960624,
      -2.9551081185609274, -1.0802074053598765, 4.88300650548932,
      2.9194974754539293,  -1.4460687526716565, -1.8683083687582904,
      -0.5995086178274498, -2.233631628934071,  3.30934393571931,
      3.8733614185243237,  -2.4010685586605964, 4.031714494473134,
      1.697213707043014,   -3.911275050509201,  -0.6963788002476035,
      1.7112865123862528,  3.3921841912180923,  0.6795986665805298,
      0.7118231245233524,  1.5549812374847,     -2.3078294869145664,
      3.228430397944793,   -4.689383531771094,  -3.507804025552892,
      1.347365376590055};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(8, 5);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements9) {
  S21Matrix matrix(4, 4);
  double *arr1 = new double[16]{
      -2.5075059174846412, 1.3147054027331295,  -2.9902789938204313,
      1.6505575945506648,  -4.20918296752785,   3.370137981692702,
      2.774716699966792,   -0.7847729581665988, -2.273130809803688,
      0.7940105425410691,  0.3357746539148021,  -0.36906598411252656,
      3.253408466250642,   -1.8906414928192739, 0.4136326467853211,
      1.851364151883228};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 4);
  double *arr2 = new double[16]{
      -0.28916762831611487, -6.681439101263875, 5.540360123821811,
      -7.552862787367807,   -4.917074750508915, -14.290344174021829,
      -4.8475997587412065,  -4.869673797910672, 32.36076706010494,
      47.13650725082392,    -9.998512541340729, -6.497287891255359,
      4.624567706194887,    9.295797263385154,  -8.987459077351529,
      -16.661105418804674};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements10) {
  S21Matrix matrix(6, 4);
  double *arr1 = new double[24]{
      -4.976493341799442,  -0.4883808225101651, 0.5199824042350496,
      -1.5437862910920486, 0.2822796991888712,  -2.8616068352966195,
      -2.3759872959806394, -0.8344321602539253, -4.050542229078164,
      -2.989778483748501,  2.608490683014381,   -3.4201479433254987,
      3.904199134357542,   -3.8270301966089515, -4.1954727122382796,
      4.768786556792076,   -3.4933320258931277, -2.794447171345693,
      -1.9772853150083347, -4.84043748503246,   -4.9593973601633845,
      -4.475892452834262,  1.62985589097715,    -2.1100492150234063};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 4);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements11) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      2.143549761671826,   4.504422376587732,    4.384078437637799,
      3.930623610208583,   3.0311783519321303,   -1.4563764670923063,
      4.164207335665029,   0.08542178942002909,  4.433574763536532,
      -4.923774320221387,  0.7710086650729098,   -3.035968252368204,
      0.28649053074284136, -0.4030688882528297,  3.669278656120854,
      0.8202241619272366,  -0.40737733702780243, -3.0019708073453097,
      2.912512004239102,   -2.00356028295825,    0.5736640997431586,
      -4.056465108481994,  2.8445619087031124,   -3.2052998192609783,
      -4.16977549341241,   -1.9601720785457721,  -3.8049959043481287,
      -2.1605579411862106, 1.0029133395299166,   3.3262511687097067,
      -3.0254206844295375, 3.725342591382386,    4.914009592376416,
      0.8952930723251873,  -0.9784338011892046,  -0.895223261411056,
      0.42853664770798616, -0.26295468292401925, 0.7503460981444219,
      2.2698112600346825,  2.0960143991221933,   1.9886859617528128,
      -0.9141523695344045, 2.318303295304313,    2.128528863725027,
      4.69926186754987,    4.383869309070775,    0.23777660380669108,
      -0.841856051272341};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      1369.6448929421479,  5359.523145003451,   4988.482212596396,
      -7709.998047735653,  485.8678225305039,   12794.320830550028,
      -11009.084273178449, -4835.687567659052,  -16189.905513888698,
      -8923.707733645231,  9604.568808484906,   4613.0333049619285,
      -18330.087010468123, 10562.289948889287,  -6820.099303797831,
      -13183.681628160622, -10271.886416959615, 14462.869468372199,
      -2011.8837967603647, -15064.87623005127,  11129.849206337447,
      5627.125214346339,   2079.10330225425,    3686.6806339740574,
      -1065.6978867238063, -1760.0792673316143, 8351.696202842126,
      -3818.9006656399874, 2645.813704877998,   18913.600140998118,
      19617.861063873497,  -17440.22165019962,  -4353.361504808632,
      24294.345202452852,  -14347.038734395614, 4465.01359992721,
      -8468.909102117672,  -4455.809041656478,  10875.656743755371,
      -3552.6526913333205, -16373.94064310747,  -1852.6526849661363,
      -2526.3456442159404, -22045.243346629362, -20839.59561778181,
      15815.490022348082,  8.14555764891005,    -26552.097771277422,
      22866.195095530347};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements12) {
  S21Matrix matrix(2, 2);
  double *arr1 = new double[4]{0.984454436243202, -0.7116049922271976,
                               4.88627454546161, -1.7202119472360353};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(2, 2);
  double *arr2 = new double[4]{-1.7202119472360353, -4.88627454546161,
                               0.7116049922271976, 0.984454436243202};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements13) {
  S21Matrix matrix(8, 5);
  double *arr1 = new double[40]{
      -2.5241631293935782,  0.4743695675812356,  -4.218257071774768,
      3.067830090516688,    4.1622900009985315,  0.30628193400127657,
      -0.41801228791810097, 3.3800355857834354,  -1.1408399212073328,
      2.0602015180680304,   -3.7996528177865354, -4.428519638303055,
      1.8850126258722657,   0.904492329541128,   4.445908112836728,
      -0.08144395124201598, -4.759863735736943,  -0.16044833963664384,
      2.8299506941902983,   -1.89178728464337,   0.5778040187714639,
      -1.081926987709243,   4.696164201344088,   -0.16226779221983456,
      2.8186372381243476,   -3.2196221071557973, 0.8454779162468355,
      4.612682668955877,    3.058847618549148,   -3.082790001479095,
      2.245307668687687,    -4.305228825672386,  -0.9142806239970289,
      4.096018681292726,    3.7186020327078335,  -4.356040338915653,
      -0.7370467487642642,  2.4647891218602744,  -3.8882541928258805,
      -4.891295071930437};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(8, 5);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements14) {
  S21Matrix matrix(2, 2);
  double *arr1 = new double[4]{-2.5233250388904924, 1.6467594347139691,
                               -3.0138199062760487, 4.1264074785535865};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(2, 2);
  double *arr2 = new double[4]{4.1264074785535865, 3.0138199062760487,
                               -1.6467594347139691, -2.5233250388904924};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements15) {
  S21Matrix matrix(5, 5);
  double *arr1 = new double[25]{
      4.6091213651656116,  1.775417237151836,    -4.982657801365185,
      4.541226515291871,   -1.728585744318214,   -1.5090092303415101,
      0.5451109985541027,  1.9734493040525152,   0.7716309063767319,
      4.454388891072991,   0.08710729431187936,  -4.122249376662546,
      1.8608335128568934,  -2.3821320016941714,  1.4716327161402187,
      -1.2545817504015022, -0.10853074942034002, 2.829734587544226,
      -1.051399500298901,  2.6226030002320844,   -3.4411514549217137,
      -1.5167911509592447, -1.5752553239074585,  1.9388232162595234,
      -0.837413759148669};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 5);
  double *arr2 = new double[25]{
      49.35427915200497,   -39.50808008258567,  117.2868108092616,
      129.18304711042268,  -52.78588395944033,  -47.583122895820686,
      48.302658094957486,  -236.91768309627167, -166.55290025428326,
      168.09480206821075,  19.915267693696073,  -53.57420462186891,
      -21.142964993871303, -12.980960444820212, 24.91863496731645,
      95.69015046695355,   -91.46382442836892,  514.7992921271505,
      406.46155101795165,  -254.8752187076604,  -20.302511167503113,
      -42.109321219545215, 72.76651898645322,   97.54880893390236,
      -50.86110356737543};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements16) {
  S21Matrix matrix(1, 1);
  double *arr1 = new double[1]{-2.667146868714294};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 1);
  double *arr2 = new double[1]{-2.667146868714294};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements17) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      3.7571336180729187,   -2.4157567554876813, -3.7439620008795504,
      -1.3196930889477745,  -1.791061402463341,  -1.548885225178199,
      2.92915293639875,     -3.9275043791425404, 2.4169449066966955,
      -1.0829445037181684,  -1.5633181658928006, -4.716493204251162,
      0.28458439451295536,  -4.337273759117979,  -2.2274687678393033,
      -0.43974582748862545, -3.7403710764904554, -2.201715118614387,
      2.036157782767524,    3.939440114562961,   -2.7133340520070726,
      -4.373064594885815,   4.324812776735099,   0.015282842886843895,
      3.2895191967782598,   -3.1513040481682095, 0.10427694945087929,
      2.1267555516771193,   1.384527488381197,   -3.1154904306659237,
      -4.428275803091276,   -3.5452483418872083, -1.3529540051657163,
      -1.2444641869951334,  -1.5011963816222251, -1.1986961592349932,
      2.468513333662825,    -2.5461441739193336, 1.5038180302687003,
      -1.8150091105846244,  2.7430733809575347,  4.099072598100594,
      -4.822087048455883,   4.586722848565989,   -1.3714632014645556,
      -4.99083264540806,    0.5866291377764474,  4.667984679877209,
      -3.8476821341835867};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      10513.004098544798,  12738.30269378443,   -8128.4435432744995,
      6033.973202634733,   4095.6587696830447,  -4117.481939616712,
      -7290.6115904862545, 2590.027556163228,   1494.4460943690262,
      -642.8115952413996,  1713.8317051346821,  -1379.1115413057464,
      1002.635009454558,   -2452.2101573841296, 4307.598247611882,
      5150.264424879103,   -4808.815699651032,  4457.350053856584,
      2683.903594958844,   -1252.866507368602,  -4437.335935567907,
      513.3191085211068,   3863.694981090187,   -3349.031849684849,
      1805.6015566688934,  2663.6506965238823,  -3697.5301758060305,
      -1265.5389814719258, -10035.812278332862, -11108.577055197078,
      5920.385736065702,   -6550.430378413246,  -3140.211813125202,
      1701.2818973956716,  7306.613154860918,   -5588.223411307999,
      -8535.678747057103,  5618.2656593536,     -4067.0709003642764,
      -4353.35710054629,   4935.192961820781,   5424.702690881636,
      291.989075354847,    1757.2009347606534,  -247.9508178744606,
      -1260.7252461515775, 839.55737477823,     -831.14409744088,
      263.62270476127986};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements18) {
  S21Matrix matrix(6, 6);
  double *arr1 = new double[36]{
      -3.1430019392857123, 2.975918033899716,   3.6708767743538484,
      0.637220195578843,   -0.8049866967236321, -4.6270199764570865,
      4.505113925909349,   4.195733109528144,   -0.5601178674472873,
      2.50930630838449,    -1.9363891147336076, -0.9595687540903466,
      -3.3374131509824343, 2.122829622326357,   2.3184714192529965,
      -4.038772801214478,  3.831213454335616,   1.989027253126638,
      2.0097655764247904,  1.7400319869845218,  1.3928929622179185,
      -1.0052854873322281, -1.4340310538357293, 3.4285874053620145,
      -3.5724103380494587, -2.6302908112519607, -4.281448278816773,
      -3.253460793312609,  0.08568647294089082, 2.526940555676158,
      -2.6541838978891863, -0.7448794429814418, 3.733898542729875,
      4.776150881651315,   -2.0472015599747806, 4.866057242801947};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 6);
  double *arr2 = new double[36]{
      -2610.621158682658,  1435.813869155457,   1332.8600775232146,
      -1960.1710255581988, -4748.26438553506,   -2300.611323634217,
      -1263.8340888068356, 6734.232883797096,   -5213.6881680991055,
      3847.931720265409,   1711.8033856453937,  1285.4822653032832,
      -1259.0543797097685, 3592.326576530425,   -734.4541922684066,
      962.3880764728874,   5437.189282420404,   1769.6005385065987,
      2527.805025381403,   -1275.5764435457563, 4340.141927153627,
      -6659.547377542554,  -7400.557562979281,  1276.1932070985383,
      -3729.905748988169,  2568.958618199368,   -4475.145120238362,
      -718.6402026441642,  -3298.48062878489,   1110.3703896141462,
      -2061.091423009822,  789.5679950507699,   -194.61400788456564,
      3566.9925183579066,  527.3435990443002,   2152.9526720328263};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements19) {
  S21Matrix matrix(5, 5);
  double *arr1 = new double[25]{
      -2.9625409841536543,  -2.856120241372506,  -1.6841440249448758,
      -1.2421869882109204,  -0.7497726949061709, 3.702932333080673,
      2.8673275437958736,   2.7492895698321647,  -3.9350630284293198,
      -0.898691620850693,   2.9373381407018044,  4.186708559933583,
      -0.32211898856771093, -2.9923715978557066, 0.7383979884212994,
      0.9323191313272003,   1.917263414221365,   1.6325993200450748,
      -2.518532925225452,   0.3294613176495833,  4.369338227142945,
      -1.0625524461500069,  2.8547094351529125,  1.9221887184363151,
      -2.9215340714827533};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 5);
  double *arr2 = new double[25]{
      29.965171279607837,  -38.17950653958133,  -0.147125001009893,
      -11.38736216597714,  51.06462377447918,   -97.09409511005273,
      125.11572000785443,  2.0703727874257885,  39.34830055172917,
      -162.8027508706245,  43.334171882469526,  -56.81638455067995,
      0.06391632821281777, -17.48471434650973,  74.0315117758931,
      121.14945324404722,  -155.37785016988195, -4.029989601515333,
      -48.177496985534596, 202.06143315847245,  46.79134420044491,
      -60.570436175574486, -1.0374160593352464, -19.033614861376982,
      79.71167938700717};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements20) {
  S21Matrix matrix(5, 3);
  double *arr1 = new double[15]{
      2.484438092794468,    -0.9179316025590367,  0.23668375790912322,
      -3.3830035675848524,  -2.5439466903617602,  0.6971402097927291,
      -3.6833623369154544,  0.017907588083845738, -4.4570105023426985,
      -0.13961162187038845, 3.7728213217524473,   -3.211301624472326,
      4.554457321310144,    -4.240664116271371,   -2.9437371766980105};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 3);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements21) {
  S21Matrix matrix(8, 8);
  double *arr1 = new double[64]{
      -4.182986802656736,   -0.014226653226780073, -0.8939615196233044,
      0.1937803026211622,   0.3602375620023164,    1.7505280025165328,
      1.5765603684289156,   2.75680824795979,      0.6674750379700791,
      4.896621793615324,    -2.51018940284633,     -2.7899487631106625,
      4.33568207865944,     4.039839843830759,     -4.370814759682301,
      -0.12980529071677083, -1.284854127910017,    -3.75927549300648,
      -1.043457687151701,   0.5233168105891197,    2.311120982844919,
      -3.169730178461483,   2.941787669546514,     -2.827239998242699,
      -3.898644113322617,   -0.3905931310045121,   -3.721431819407716,
      2.9165901041536646,   -2.8424755379431845,   0.3833084751249345,
      -4.001596700529135,   -0.462728199190094,    -2.959492743891686,
      4.633262532462778,    -3.6352070216427315,   -1.6815565782745443,
      4.581613965387151,    1.9255723718262718,    -0.15860596742106203,
      4.126993808251964,    -1.5751397110063516,   2.283404720542949,
      -0.223533619221139,   -2.2599550364057386,   -0.179998980466336,
      -1.8858339254261192,  0.837761365877939,     4.8739648897614405,
      -4.004922747167305,   0.44285887151933157,   1.7027505148840376,
      0.2265609468686236,   -3.255828991980251,    4.850776775784757,
      -2.846242327455213,   -1.5316293496631896,   -3.890006844208763,
      0.18667696613774876,  -4.531700685119205,    -2.4772838906374983,
      2.178963479619199,    -3.21638560805921,     3.393280320015352,
      -1.2175651700894186};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(8, 8);
  double *arr2 = new double[64]{
      -34416.781700406704, 113277.57008843178,  67679.36124263889,
      70353.78347817576,   21633.162945164568,  -71466.03128698014,
      -5105.772561567378,  -54441.60637894323,  -20233.38111720179,
      73227.9087441774,    33237.081285296365,  67374.77423164896,
      -1119.4926348520269, -28074.30239006654,  31692.84757575448,
      -24432.226030301867, 34162.645868026644,  18542.25974050005,
      -43648.94095915203,  -6180.594041660989,  -47819.27586335699,
      32865.76668241847,   37887.97227052059,   1923.990846012869,
      1961.3124960343328,  11771.827656503534,  16525.79495644737,
      -6906.509324147734,  4521.520582801345,   7330.264592195422,
      19895.41835372142,   -7742.139793553404,  37341.10930408849,
      -106947.17767380159, -54541.659889048016, -93289.61825329915,
      -33459.228312153915, 41069.297307360495,  -19491.880229360664,
      34418.73554462689,   17263.916826905777,  23883.12014759365,
      -22383.646457345993, 35950.75581453861,   -7735.634600852936,
      28598.579208299157,  38735.59360705523,   -22768.033717093986,
      38025.1710867726,    -45001.47702320744,  -48350.368680236796,
      -19689.124545629507, -10300.862324667944, 20848.263527713614,
      3916.666424955128,   29037.562292573002,  -7997.796028817148,
      -9141.74761423675,   31118.167461122834,  21559.119860219438,
      27001.42611485154,   -10460.12793043454,  -26413.308131564936,
      14611.815513708809};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements22) {
  S21Matrix matrix(2, 1);
  double *arr1 = new double[2]{3.83020806946298, -1.3043053335984767};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(2, 1);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements23) {
  S21Matrix matrix(5, 5);
  double *arr1 = new double[25]{
      -1.8925835489814,    -1.8546434759759292, -1.1646328991740331,
      -4.170781576061248,  -3.1816252066154718, -0.6168741527776413,
      -3.4453804037368507, 2.3827692528936053,  2.205783861537798,
      0.8780070192852634,  -1.7592606935977528, 4.966126620337729,
      -4.936213558176395,  3.841055278648936,   -2.4944284836401422,
      3.2766092467414936,  1.6584364823941824,  1.323562183948459,
      1.3411497248923379,  3.7596930477286197,  -0.40561871995223964,
      3.8352632453523476,  -1.896367378430904,  -4.081568125653207,
      -4.143477537034423};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 5);
  double *arr2 = new double[25]{
      -294.5554275015151,  152.25504292540992,  134.4543532534033,
      -54.08756997399161,  161.5074805475074,   -260.56422002917327,
      107.30426216058656,  26.661430645849467,  -91.8893785552629,
      203.14402621048896,  -122.51687230019421, 53.424964741167614,
      57.52657584842944,   -44.30832121870931,  78.76230712240631,
      -345.2733843767791,  136.52558241851028,  109.49892586353127,
      -74.68699558441837,  183.62613512475298,  -68.57153334402817,
      -2.4556806862120184, -32.868047199834926, -19.03458682103796,
      79.2048292478885};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements24) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      2.952371381778378,   -1.955044147581523,   1.5881586174415556,
      -4.92607695533417,   -4.593269604481417,   0.15681903064163016,
      1.348795007823373,   0.6422362873652983,   3.9415853784167325,
      -3.200037989197483,  -1.0089951558481736,  1.597297477437177,
      -1.7757135715624974, 0.9162636709753453,   2.0575251573458386,
      3.7251160776455485,  -3.9069837318417635,  -3.2831202322423447,
      0.5264855871287955,  0.035909087485030966, 0.21665132593043168,
      -2.3945765983768155, -2.782609508015187,   4.924289563778485,
      0.7442580813166515,  4.83099316122448,     2.3490305708554313,
      -1.300652955090503,  -3.2541196070847747,  1.2999086059709306,
      -4.829602621370793,  -2.2493134845852136,  2.2196061518531787,
      3.080095779471847,   -2.2573450106977533,  -3.258109748616417,
      3.543592591546968,   1.3627267417727555,   2.0606272311526252,
      -2.6922012448097012, -1.2405605159277169,  0.49892197890697876,
      -2.8890796129444363, -3.5274026600196065,  -1.3109797209223273,
      3.681125805246502,   -0.667243408878802,   -1.2600734421511905,
      -4.2327911700895084};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      -5518.084313413401,  -3621.5725508766245, 1513.1515498987644,
      -9569.236351747364,  -917.6667573006984,  -7897.099415255282,
      489.2488028864858,   -12881.262686477445, -7389.455875204832,
      -3487.3467778310064, -10519.08029649854,  7700.434001685364,
      -20551.630513286076, 11786.280180212258,  15996.049936894238,
      14823.719907575485,  8026.998969356222,   1851.0304935903796,
      -2604.236380279682,  7438.936677046596,   -25951.763296768193,
      -696.0987898263966,  2674.1200640524753,  6742.683633359219,
      -5350.703459967353,  4012.876242595053,   -3924.056391338731,
      -7959.455621827898,  -7831.094164650044,  -3723.447085218309,
      -4947.2158987397015, -2785.277184745605,  -97.04061615647379,
      2792.3447652703,     6742.049095843852,   -2885.0803000411142,
      6440.129960545248,   4629.741138188801,   -903.0972636496126,
      -3498.0835088635117, -293.6788548725118,  -4978.153971462694,
      322.1519983836823,   -71.76008388873791,  1250.2916389313255,
      -2208.4709620133453, -352.4633176385324,  -6902.442581199124,
      -10744.917078376611};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements25) {
  S21Matrix matrix(2, 2);
  double *arr1 = new double[4]{-4.893494322334693, 3.770731963445307,
                               -1.2013641737785874, 1.4384487166563273};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(2, 2);
  double *arr2 = new double[4]{1.4384487166563273, 1.2013641737785874,
                               -3.770731963445307, -4.893494322334693};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements26) {
  S21Matrix matrix(3, 3);
  double *arr1 = new double[9]{
      1.8202832923739098,  -3.380134947973933,  -2.8379906012811484,
      -4.6156545814384256, -0.906532894136908,  -1.2563236148672141,
      4.725900090847983,   -2.2142161326132905, -2.3331626388545814};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 3);
  double *arr2 = new double[9]{
      -0.6666833363290829, -16.706332708905542, 14.504240723549703,
      -1.6024800013378437, 9.165043070522284,   -11.943679425807705,
      1.6738115232648711,  15.38604920684011,   -17.251682039680798};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements27) {
  S21Matrix matrix(6, 6);
  double *arr1 = new double[36]{
      2.30197427239068,    2.1026616256120336,  3.1579549963329097,
      4.957241566611151,   1.509795658921588,   4.964361371813338,
      -4.376566690503564,  -1.4531426893285806, 3.276903220690727,
      0.10141378851728167, 1.542733274529633,   3.523632433541687,
      -3.5450769375788163, 3.9718317982376483,  -1.6458935469762084,
      3.597714869306955,   -3.707581218402667,  4.589659593330834,
      3.431890189252062,   2.0896323688122864,  -3.0642696975129935,
      -1.3431487405328268, -4.596398920460531,  -0.5660326775033404,
      4.652613109155407,   -0.6651578260780289, -4.111689902558913,
      0.5207923042035842,  -2.3246965155204657, -3.60006136475858,
      -0.7022115072580579, -2.8708462621956343, 1.9495749035143861,
      3.982416985523315,   -3.600559691827745,  0.7367446912271189};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 6);
  double *arr2 = new double[36]{
      1419.0004654216327,  -20.107600995239014, 168.0305497282794,
      486.3760582161099,   635.4066559437438,   1305.732923310012,
      1050.7732964965664,  -5736.379486393419,  -4475.857154859282,
      -2108.908786906798,  963.767055703653,    6602.389293057856,
      -1210.409290062589,  710.2421593628083,   -1483.417980795069,
      1078.354189258052,   80.31058253632709,   102.84999778733159,
      1490.7497594513418,  -193.37494275363258, 851.4499215862802,
      -2475.581853072072,  -2017.7755507649106, 1934.7060490007354,
      1136.9882593665282,  -4690.552521318768,  -5707.88571422752,
      571.3878026547619,   1868.1480234045478,  3951.675284481784,
      -345.52372814976894, 77.65379162395729,   2278.542756396692,
      981.2967397983118,   -1812.8759397875467, -1750.6544164873746};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements28) {
  S21Matrix matrix(7, 4);
  double *arr1 = new double[28]{
      2.041169522822286,     -4.407900089607092,  -2.0018705107765555,
      2.7608574556327152,    -0.8795628499993766, -2.2270813140632395,
      -0.38526614881564747,  3.4448831751074156,  3.7040348469653868,
      -0.5096669880556215,   -0.7654531674719678, -4.610546479071239,
      -4.868634079323266,    4.872168714206673,   -0.8960831404350174,
      1.1447313206197034,    -3.60325988092724,   0.2386369899316696,
      -0.024996245849645327, -3.751221793696934,  2.842256773198799,
      -1.995958446192673,    3.143891028558821,   -1.8842096075112424,
      -4.945558348598223,    -1.9279055733377337, -0.45686184935626883,
      3.3488303206250443};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 4);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements29) {
  S21Matrix matrix(7, 8);
  double *arr1 = new double[56]{
      -2.310634038729736,  -4.877666323876857,   -0.018182361456030804,
      3.30256200150912,    1.820932141710749,    -3.5697441281228173,
      4.334622823400986,   -4.014597166952583,   -0.3392393474274904,
      3.2233192574497096,  2.397136049710916,    4.350228035852906,
      -3.008619618302574,  -4.109303511425701,   4.945583780305547,
      1.2242089746423694,  1.3423697186224972,   -4.304112655847151,
      2.4200573962928997,  -2.95394404773905,    2.437176166197002,
      -4.506633163235883,  1.3208759890348531,   -3.644988123787176,
      -2.8765862661394124, -4.653669096998855,   3.3980088891554434,
      -0.2218702731447797, 1.9128861701845903,   2.609034771501083,
      -0.8224657804624647, -3.106035730072522,   -1.287141029749661,
      -2.287035570999505,  4.1096827300221825,   3.4011961594018985,
      -2.898471689710459,  3.4936563135393826,   -2.121184963878741,
      -3.941815825907291,  -0.14294768013703862, 1.1589485353500182,
      -3.4305758796538743, 0.8912464781565577,   1.1632020828130933,
      4.820197673867504,   -1.2449818075547645,  -3.4574525400472753,
      4.335010995090798,   1.348222782027162,    1.9953658754121681,
      -4.072685057976305,  -1.0503068997639078,  -2.428127044264193,
      -3.06684124030855,   -3.62624450852139};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 8);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements30) {
  S21Matrix matrix(2, 8);
  double *arr1 = new double[16]{
      -2.57674684519095,    -1.4254087561988706, 2.488901040350995,
      -2.2774400620231985,  1.5927449995715737,  4.419048953022449,
      -4.169528820576975,   -0.2011782263756352, 0.321749309090964,
      -0.11330498907062747, 4.443562990950804,   2.793424333393312,
      2.0538867116361823,   -2.6353021524149236, 2.336935720523009,
      0.36441741106596837};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(2, 8);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements31) {
  S21Matrix matrix(6, 6);
  double *arr1 = new double[36]{
      -2.351879796972937,  4.733208308304711,   -0.5967527433555633,
      2.9216532824694017,  2.3955644087120023,  -0.48765057689350577,
      -0.6005762744760919, -1.3174814903176046, -3.0713200405897445,
      -4.912968813414061,  4.6138786077443825,  -2.3070942653268056,
      -2.710173846250765,  -1.5064114068001322, 1.9940910293314875,
      4.475333561496077,   3.982690372187726,   -0.44772981554245384,
      -4.568324013267823,  -2.509375640959531,  2.0321486430535796,
      1.9495214977036044,  -2.377405089539165,  3.866705936011005,
      3.547442148571724,   3.2213759468721985,  -1.1257108438678456,
      -2.0465249555841725, 0.09666108701622012, 3.020849548268135,
      -3.112137139698855,  3.3879166235432976,  -0.944388667018524,
      4.671833143605159,   -4.417742700249621,  4.419687431354172};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 6);
  double *arr2 = new double[36]{
      3055.2068145519656,  -4588.719621730448,  -4595.505194184382,
      2762.0558910949317,  -293.729789736983,   1473.6318506343932,
      995.4440107739564,   1385.504821109436,   4091.885787780898,
      225.63406001104,     -1205.437699065816,  -930.1843883066251,
      -2095.7567911629344, 2663.11325251417,    2428.7917239856524,
      -3621.3777462624207, -2672.5567424270785, -1841.5692085058688,
      3095.441401475848,   -1272.2046068639606, -4595.599611728548,
      3464.035616566897,   -150.63365310550392, -1639.3304151236603,
      -1708.1670795808943, -630.1286481544454,  -777.9354596792315,
      596.2323060776014,   -2086.0745313132948, -3601.4172829739546,
      -896.199611315573,   2030.4419144187475,  6427.302081478269,
      -3382.4692360099552, 625.2238755937764,   -1029.2003268407384};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements32) {
  S21Matrix matrix(7, 5);
  double *arr1 = new double[35]{
      -2.7247245157533264, -4.4922152448971575, -1.2265954031197213,
      -2.563006975497004,  3.673272153966087,   -2.3894581382206925,
      4.568745608926282,   -2.555688488972762,  1.640087398428757,
      1.9780982356370256,  4.1273996418654075,  0.47824092357000936,
      -4.652876844639261,  -4.326977808612037,  2.440599388237895,
      1.0316018114464098,  -1.1922125195254418, 4.847876349041041,
      -1.2972138306173662, 2.1663017361780526,  0.8698623584002938,
      -3.9333960389871594, -4.914510224140805,  -0.6674096756801537,
      -4.09327067565518,   0.46711920642512617, -4.079118905183875,
      -3.242765257900062,  1.6021736930678987,  2.109509338413714,
      -2.385258950513153,  4.786698334022917,   1.7692873340441047,
      -2.6856660806388932, 4.784356894004109};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 5);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements33) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      -4.114030088482613,   4.164309512676379,   3.7110240212315677,
      3.6004085432279815,   3.822244999176828,   -0.6087532172438497,
      -4.007568784734285,   -4.191891779657229,  -0.519304495046466,
      -0.9269733263557924,  -2.890425519830485,  -3.296966309670595,
      -2.440061744223292,   -2.9226528099934934, -1.539865019991129,
      -1.232237083333172,   2.722190216734094,   4.385557609125662,
      -1.7996627609512283,  4.300102984245443,   -4.3490283119091435,
      3.335081639753687,    2.2026693684002314,  -0.44737545318673444,
      2.3219468817581577,   -1.1811726107961862, 3.390546074317072,
      -4.475227179637013,   -0.5193218758962335, 0.5809889648931756,
      -2.789824847272641,   3.454689710177787,   3.6493569246244757,
      -3.670265921045716,   1.7539789589866084,  -1.1403930109989746,
      1.0591780428340645,   -0.6745928512265476, 3.435541012379545,
      -1.0076504508563557,  -0.5845940891155488, 3.637396134758349,
      -2.854664448189813,   3.5821150543447953,  1.6516046270269449,
      -0.16223049856704286, -1.1555336755253878, 0.9741784850875792,
      2.0802866929006125};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      -11440.545098388206, -4557.3616186571,    -24197.86360155283,
      -5640.699861861879,  6696.536328582765,   22581.94432826401,
      4064.5912842257603,  4320.789238448721,   -1204.9312901556648,
      4404.07565625728,    347.07512675533644,  8647.097333288755,
      7548.029298514712,   5803.048607759774,   17549.34641403988,
      9777.169033422784,   16005.823693769558,  -1176.3120745126755,
      -9809.751674339608,  -23877.021834339972, 179.49799867358422,
      -7344.168467706994,  -10674.726017120947, 6550.3386312651,
      -2218.176071641099,  5584.531460383573,   586.4434545638317,
      5757.066248547372,   24151.532952189125,  1480.4165124078377,
      40469.43982483801,   3656.4307196268574,  -23214.41377976524,
      -30061.428137600127, -69.54312360137246,  -24782.933622679244,
      -3385.638859178814,  -34884.16127443477,  -19043.575599468448,
      31457.65691321406,   41061.074692609276,  -3722.6848837044527,
      27890.02304530357,   -8324.758711073584,  33998.19016964285,
      12604.972604529747,  -18876.202975068267, -40997.56744260171,
      -6250.219798628169};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements34) {
  S21Matrix matrix(2, 2);
  double *arr1 = new double[4]{0.23777024664338864, 3.195484049884543,
                               0.5175179838119526, 3.3876194861505056};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(2, 2);
  double *arr2 = new double[4]{3.3876194861505056, -0.5175179838119526,
                               -3.195484049884543, 0.23777024664338867};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements35) {
  S21Matrix matrix(6, 2);
  double *arr1 = new double[12]{
      -4.0116747829373045, -3.7471275517242777, -0.7741564406687189,
      -3.2423273455360393, -1.9263350176138792, -4.953484211154517,
      -1.170345542149481,  4.557269150906452,   0.2496324161719503,
      -4.562884433730189,  4.901970771229935,   1.1166097636681904};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 2);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements36) {
  S21Matrix matrix(1, 5);
  double *arr1 =
      new double[5]{-4.081288176985149, -3.224761802887631, -4.400362765430936,
                    3.3367334946016545, 3.416079442505506};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 5);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements37) {
  S21Matrix matrix(5, 4);
  double *arr1 = new double[20]{
      -3.222404129297579,  2.640833009458916,   2.5854944509513524,
      0.23017308637233835, 4.894762069284138,   -2.378694966937026,
      -2.8768808639530907, -4.821073562352893,  -1.655286756149886,
      1.5656096205907089,  -3.139510834151503,  -4.571761752327422,
      1.540907407912596,   -4.534450182501533,  -3.753495827065214,
      2.564931310855986,   -3.2855694033571226, -1.6147998510151051,
      -2.066570584287396,  -0.9292013335536318};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 4);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements38) {
  S21Matrix matrix(2, 5);
  double *arr1 = new double[10]{3.923268737451549,    -1.7342301096781432,
                                -0.38463747848695196, 3.865573678312245,
                                1.3779730282108869,   -2.595697418995261,
                                -1.476180179059928,   -0.8231725475194995,
                                1.1225034146446422,   4.963669985020298};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(2, 5);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements39) {
  S21Matrix matrix(3, 5);
  double *arr1 = new double[15]{
      2.754616391165131,  -1.077564863514028,  4.390922442555997,
      -4.591654058968721, 1.0565972974124076,  -1.1993354876166142,
      3.424983352116625,  -3.836904622404175,  3.6342567466473596,
      -3.346018299903375, -1.2751664297799445, -4.589075412211738,
      2.7991840023721357, -2.009696611925645,  2.966988403853276};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 5);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements40) {
  S21Matrix matrix(1, 2);
  double *arr1 = new double[2]{3.8650467520552727, 3.641976725944504};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 2);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements41) {
  S21Matrix matrix(7, 4);
  double *arr1 = new double[28]{
      0.677363619274991,   0.9053788262888549,  3.829619640085088,
      3.1685942448179194,  2.325542872618853,   -2.640247275476124,
      -2.7035508682018117, -3.560760305071664,  -2.1438110334410543,
      -4.130935448641557,  -4.978935274780869,  -2.8545785723932515,
      0.25878164214497623, -4.0219446783572765, 0.06534778799072427,
      -3.0149139366309283, -1.0073766141824692, -3.8381194535244987,
      -0.5858012099948864, -0.9715771786528506, -3.002557838152068,
      -3.286896352937698,  0.7050254975056536,  -0.683345373781787,
      3.03434953890922,    -1.6390172121172486, 2.3019713191365803,
      -2.433412436679341};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 4);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements42) {
  S21Matrix matrix(5, 3);
  double *arr1 = new double[15]{
      3.0130933991288558, -1.526472498743261,  -2.5054672650363785,
      -3.651295911716268, 0.7077125648062177,  0.3913398958854586,
      -4.639307109347152, -1.6059001275349671, 4.747457716218374,
      2.037623518167008,  2.2198855122966243,  -1.0209330087417778,
      3.9230752094223025, -4.928907629628682,  1.533239634277633};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 3);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements43) {
  S21Matrix matrix(4, 7);
  double *arr1 = new double[28]{
      2.8407079249148097,   3.2028222064666227,   -0.3514697853963362,
      2.0360436356009357,   0.3824288940664955,   -0.38233031229621517,
      -0.23070020285149617, 1.932014857293134,    3.8837548499419086,
      -3.8943354779870454,  -1.337157027425949,   -0.32852190681142623,
      4.526856226798763,    -1.147972921245235,   0.596852333117309,
      -3.573608969240839,   -0.23986714907808349, -2.7146925877288455,
      -4.57930815187619,    -4.9540791102082515,  2.670095647030452,
      -0.08349420374602978, 2.3792038682234518,   0.14400193943607942,
      4.875011426539546,    -0.03895138361885131, 0.4890662657974847,
      1.1684284712889061};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 7);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements44) {
  S21Matrix matrix(3, 3);
  double *arr1 = new double[9]{
      0.31291474972819344, 1.9165378112724065,  3.9684902680900898,
      -1.8034320563458106, 2.9878368198666214,  3.7001296780429946,
      -3.802513426491215,  -1.8622621079527546, -2.7725879106126463};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 3);
  double *arr2 =
      new double[9]{-1.393428951714636, -19.069966697552807, 14.719752806507762,
                    -2.076599486277548, 14.222653875163514,  -6.704931478303077,
                    -4.765762907701334, -8.314727716936734,  4.39128393676474};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements45) {
  S21Matrix matrix(1, 6);
  double *arr1 = new double[6]{3.4410098229060253,  1.0515956614747655,
                               0.4810904510006333,  3.6163979416894687,
                               0.15022482564854478, -3.890551442267692};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 6);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements46) {
  S21Matrix matrix(5, 6);
  double *arr1 = new double[30]{
      -3.7418120743257477, -4.101748642279249,  4.960886732646355,
      -1.7967897864889992, 4.366676152057673,   3.1798303030592887,
      2.6400685421685584,  0.3150799806850513,  -0.3654910164551666,
      -1.639443932028871,  2.632040071746359,   1.4154438388658548,
      -0.3243304582112767, -1.6098812379816616, 4.162791786557854,
      -1.0325349848477474, -1.4151479174788681, -3.261395487371561,
      -2.0271575528059307, -4.429249727825857,  2.1452165902670783,
      1.6123429524113932,  2.7973757326764304,  4.801225975076495,
      -2.5284524311697822, 0.1632641561875321,  1.9908224423488878,
      0.28704911494353613, 1.1284314705787777,  -1.1914753396457511};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 6);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements47) {
  S21Matrix matrix(2, 2);
  double *arr1 = new double[4]{0.17237035469536366, 4.6443770228488965,
                               3.596612161364554, -3.0879194649829964};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(2, 2);
  double *arr2 = new double[4]{-3.087919464982996, -3.596612161364554,
                               -4.6443770228488965, 0.1723703546953637};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements48) {
  S21Matrix matrix(4, 4);
  double *arr1 = new double[16]{
      -4.378656167326202,  2.532621455819535,    -3.14086556726377,
      -3.9755881440983956, -0.12743969663049803, 2.675390795812012,
      1.2348009591333096,  -1.6669408578465683,  3.746691300907468,
      0.699011792677716,   1.019365490591766,    2.32144129268696,
      -2.2941212107074236, 3.842744390456806,    0.299626198102489,
      4.489895006320504};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 4);
  double *arr2 = new double[16]{
      23.704372888953806,  33.612440250026765, -85.19049816162182,
      -10.970859327739909, -6.409011307193307, 38.80871967505074,
      94.38811767101842,   -42.78857104341639, 88.83147365297486,
      51.38131892688144,   -91.96506840732482, 7.550296067623414,
      -27.319496300320097, 17.60449718276892,  7.160208111806403,
      35.6472934313374};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements49) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      0.2170184206517325,    2.0822737985010145,   1.564505906768395,
      3.7659577868103185,    -0.6949469313299428,  -1.463976777421129,
      2.0332702875192075,    3.7226502183302017,   -4.77753113945301,
      0.5128401062535728,    1.6060570081249237,   2.4713505619441056,
      -4.020225038452443,    4.43184891857608,     1.2535524566008904,
      3.230920061529524,     -0.48988317899764944, -3.466156896835618,
      -1.1513491858303326,   1.3646426043906317,   3.835771214744586,
      4.630992750245287,     1.787301293580481,    -0.11017052051583409,
      -0.431314233314783,    -0.3866390606887915,  -4.728308573649769,
      -2.1908405754822526,   1.350199078873116,    -1.7205703619281518,
      -2.2613303717858546,   1.7013826531500875,   2.9532772191813574,
      0.7075460381955425,    -0.04714626895135687, 2.262555412628747,
      -2.635153931778281,    3.75666688513164,     3.556040823883711,
      -0.047541202688523576, 0.11507284173795718,  0.94999704082369,
      -1.804826599063606,    -4.105024633877676,   -3.839930683961451,
      0.13919127730370917,   -2.779780929144912,   2.5628144662321155,
      -2.5666293150886235};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      -7112.460667723373,  13695.667927264467,  -14647.190447317278,
      26953.66029365203,   -13271.609252528577, -8532.530856878735,
      12326.083480584417,  -6005.23509019103,   -12594.015037104627,
      -3494.4728419508774, -4880.469213308926,  -335.7519249376182,
      -16303.209428408116, 13413.538279142935,  19086.701581439942,
      6205.665775613611,   -6492.974121218418,  -5059.096418722031,
      -10805.042502153923, 16105.930130342447,  13877.326379580916,
      18550.61763495341,   4957.611815898167,   -5021.217882976211,
      186.53522928620873,  -8197.991500428607,  -6349.638209505304,
      -10912.755548057881, 17933.855777091536,  8935.619652021112,
      -18032.998004588182, 14693.606127924604,  21573.772157070805,
      19607.884844488613,  -2913.0595486914767, 22337.358372851875,
      -6117.072430029001,  19388.617767694068,  4305.52719871973,
      -6736.039473736086,  21856.361316102706,  -5578.315838534683,
      4624.678368999935,   -8282.490167646583,  -15547.328887800906,
      6529.130770179792,   -23133.176744969664, 2309.0383923438976,
      1614.2847780873483};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements50) {
  S21Matrix matrix(4, 3);
  double *arr1 = new double[12]{
      1.8271798705833877,    4.879322899605,      -1.5722713319309323,
      -4.3217400097890035,   3.2471396322342247,  -3.626626996381691,
      -3.641431105979432,    1.6163409456967965,  4.233113534771178,
      -0.052284226381805965, -1.1748788176176914, 3.8985507811749063};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 3);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements51) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      0.9835325958286232,  -3.4866616574675424,  2.7219263573262005,
      4.070483797514063,   2.8396733904335143,   0.012487757021778734,
      -1.8581529281680753, -4.362219753792479,   1.2675428809975404,
      -1.8586276803968982, 4.442313421245887,    1.5699081819130392,
      -2.718435208100086,  4.059907757872949,    3.3760774222273042,
      -1.174097550070814,  -0.20612270096917928, 3.954848966847088,
      1.8741688577564926,  3.702288688674358,    1.2494581758215286,
      1.000488562548428,   0.6844850431064557,   -2.014224508192566,
      0.9310766540653486,  -0.3435172037451011,  -0.3640412493525176,
      4.867955066345553,   -4.300983415024295,   2.5391118747671504,
      4.019548470608537,   0.5185275405178578,   4.899464506832183,
      -2.8459886675714707, -0.6217387230948148,  2.3784061313519933,
      0.47775554609359716, 1.8278276722068227,   1.6187017246755087,
      4.4170252436077835,  4.393384156298568,    4.392554961322482,
      -2.2689453974303495, -1.5048323199018219,  1.4377379275244362,
      1.125844629295516,   2.5168359503830295,   -2.7560849169230615,
      4.016185414057018};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      -964.1526417155189,  2155.36826001145,    8838.70696646005,
      3898.403775719383,   -8510.113914851783,  1418.1325755469572,
      2312.1869180530243,  -1117.3455303291362, 757.0790374842893,
      3011.5204069868664,  1604.9157770351999,  -3279.491540653471,
      1065.1031024842375,  910.5343793840661,   2308.4083306415982,
      -3368.81398896277,   -13725.327192220184, -5437.913503002988,
      13475.836523788103,  -2818.9105995134037, -3899.6718837912067,
      652.9546826703337,   1776.776831719864,   4192.775261066595,
      1939.8627426562714,  -3994.4259378776756, -286.26025099033694,
      1296.6360771307284,  917.4965238072609,   -174.13676822479346,
      -2816.6037595042976, -1142.571954565522,  3176.3354953034686,
      -1108.82167999994,   -969.7566827490747,  -1432.0702526022576,
      1643.2182117217253,  6998.396723944649,   2712.804897650469,
      -6707.145549939393,  1999.8034357515724,  2116.394960218124,
      882.1438902535248,   -2697.818346438802,  -7857.176836482588,
      -3622.1496628885734, 7854.440197124194,   -1555.491953466887,
      -1922.307313692735};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements52) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      -1.9226246238018065, -0.815695425569885,   -3.2392601082332027,
      -1.2045493908102243, -2.178489504620178,   -0.8592182398416366,
      4.896945172989412,   -2.2971452395744563,  3.6469632669481076,
      3.184688191904602,   -2.7169327555747804,  -1.3500176749744828,
      2.7060731388322887,  2.9531028773329666,   0.3709752013795313,
      2.0392953285705264,  4.410988371435426,    1.5975724984768158,
      4.614908749909665,   0.6401660214483407,   2.0229702395135796,
      -1.0582348474459335, 1.0989476112518846,   -2.214826040432981,
      4.795148040550499,   2.56664001353829,     -1.0312963062718152,
      0.8686575098351028,  -4.988755201754693,   2.909636936630192,
      -0.4303219041474531, 0.31337984305157107,  -0.2776383244974001,
      4.008210413827058,   -0.03196528668919729, 4.100645771201858,
      4.132805328452658,   3.75864232855864,     -2.8459278480533854,
      -4.632750382655843,  -2.6930822865476056,  1.3931258488058562,
      -0.6912477675379822, -1.0990300603391678,  1.6583036424906403,
      -4.851419798722897,  -0.31579054514328675, -0.8404949797842178,
      -2.4792013754506037};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      -6781.6443319157115, -6224.522917080834,  8408.572013805717,
      6385.272396917595,   -6373.4335932629,    -3960.6454477255916,
      -65.89393803938606,  17970.318839277676,  16503.878892145007,
      -22320.849979137067, -16965.300027383928, 16913.58234489449,
      10489.446741080432,  231.27089071459096,  -9754.016305648998,
      -8957.989777260273,  12127.86846378871,   9203.755243250584,
      -9164.633251181682,  -5690.640509372057,  -110.91902890123023,
      9788.503927630396,   9027.865350302296,   -12191.257116950053,
      -9252.169556675954,  9240.237016260904,   5685.089567275034,
      114.918809709254,    -13156.769327991187, -12055.769028949073,
      16325.08463151667,   12407.130246896624,  -12375.244237535066,
      -7661.941880285303,  -172.71740077999874, -5587.456574649046,
      -5115.690671111812,  6944.208204012378,   5275.742106243847,
      -5268.1018045980445, -3273.197246167266,  -72.56233626687188,
      510.7137614037018,   498.32430585303575,  -662.648996324791,
      -523.0780728501529,  516.4825322007079,   279.4010933538549,
      -4.687786213350534};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements53) {
  S21Matrix matrix(3, 3);
  double *arr1 = new double[9]{
      -1.4716097151960938, -3.532691013912755,  -1.991314064099937,
      0.9499182545905382,  4.825294963589998,   3.3842910085309406,
      -3.057467796575697,  -1.0336747627724598, -0.6616438337480872};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 3);
  double *arr2 = new double[9]{
      0.30562954672116505, -9.718853217109464,  13.771277433688216,
      -0.2790121330786877, -5.1146971301105575, 9.279923187041625,
      -2.3469767098756305, 3.0887699470935157,  -3.74518326516214};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements54) {
  S21Matrix matrix(3, 4);
  double *arr1 = new double[12]{
      -4.441892897750042,  -4.746621938186431,  -1.2984710063926599,
      -4.825764611529624,  -3.5375086414776105, 4.719169531804656,
      2.50147374409962,    2.4916177713668466,  -3.271845809578794,
      -1.0404226107277728, 1.0811335738129104,  -0.24034921741776394};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 4);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements55) {
  S21Matrix matrix(4, 4);
  double *arr1 = new double[16]{
      4.6909391414605714,  0.9910666203062268, 2.2601461989328335,
      -1.962573363210609,  0.614150058777712,  1.957824697277485,
      -3.865804902734159,  2.094507254605328,  -1.8729208630951688,
      0.04177558490501454, 0.5009322375694891, -0.43688275104862484,
      3.2621834012361646,  -2.687533191423803, 2.437589965798753,
      4.501708852837776};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 4);
  double *arr2 = new double[16]{
      5.721051345438018,   38.03044032229452,   23.368561758068562,
      5.904864380677986,   -2.6769979868105116, 43.575874152871165,
      7.293282275996084,   24.005647270377168,  -43.925642431762064,
      124.07882445467534,  87.55488090911142,   58.49702194258087,
      -0.5232192707501044, 8.34692869568845,    15.291504558737204,
      20.574521858373817};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements56) {
  S21Matrix matrix(3, 3);
  double *arr1 = new double[9]{
      4.934352097860575,   -1.4320150591008352, 1.4689380639259788,
      1.5704510512221788,  -0.0475201811581929, 4.719933550284884,
      -1.9625766450139603, 2.995094126639726,   0.768622394903332};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 3);
  double *arr2 = new double[9]{
      -14.1731703300361,   -10.470315199875783, 4.610386721982829,
      5.50028661192595,    6.675557063987026,   -11.968409676775035,
      -6.6892117190552955, -20.982918688937904, 2.014428249342253};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements57) {
  S21Matrix matrix(3, 1);
  double *arr1 =
      new double[3]{-2.610744986714292, 2.247130956049225, -4.665381396327659};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 1);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements58) {
  S21Matrix matrix(4, 6);
  double *arr1 = new double[24]{
      -2.4158942827042305, -3.07523127993894,   0.2683173680753912,
      -1.469845347985511,  1.9143332435262286,  -2.4978313935641006,
      -2.0464391357735856, -3.837192377812361,  3.9707742523539675,
      1.1399244385461182,  -4.9165044125290525, -1.9125345635241366,
      -2.8384010517816205, -1.6039368484684768, -1.565072152152509,
      -4.819791908263942,  1.6790123522443379,  -1.6573785520284892,
      -4.927804122705588,  4.028829674322612,   4.896467084116862,
      4.228029706131618,   0.8327158440222604,  -4.310073353218531};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 6);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements59) {
  S21Matrix matrix(5, 5);
  double *arr1 = new double[25]{
      2.1805013200440984,  -4.871798301008949, -2.0581459454239113,
      4.581763171614982,   4.041835951723268,  2.613602002383817,
      -2.185035416331792,  -4.625155985360017, 0.051270414920195684,
      -2.1850094862712446, 3.9676498888515415, 3.489764286747768,
      3.9907706641424117,  2.9938735791075155, 3.6955932430860035,
      -4.898270597282799,  4.93095808025209,   4.704363808250502,
      3.470751275396326,   3.683356963817875,  1.060686127001663,
      3.762922049802656,   -2.559111255440701, 3.4096366466295507,
      1.2673591449716053};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 5);
  double *arr2 = new double[25]{
      -34.074975654999875, -126.89508131834077, -118.85196008086878,
      -63.53722994941211,  336.2287904236603,   101.06398208132819,
      -357.2787192957762,  797.9813839088514,   1712.7600770311415,
      -2020.383556993539,  250.3322594842426,   -21.261653508575552,
      327.2022371405191,   326.5643513333712,   -364.251020495825,
      -143.7796241883999,  -182.0805758837819,  497.9296544622566,
      998.7031270877527,   -1020.4663268854622, -29.181393126936666,
      379.9032760177989,   -646.4481842486174,  -699.2690709494435,
      937.1589577399651};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements60) {
  S21Matrix matrix(3, 7);
  double *arr1 = new double[21]{
      -2.5567899214822196, -0.5194608634319122, -0.6163705436661022,
      2.300150867318589,   3.009594199744374,   4.7775802525435065,
      -1.3652782223465976, -2.833919496832775,  -4.444895805267847,
      2.431672820642917,   3.0300891791589297,  -3.2387769225139005,
      -4.382630267808885,  1.621987448154382,   -2.0908595282170195,
      -3.8579365927154354, 1.2373305211825993,  -1.358418539690022,
      0.0740592049487141,  -0.7677189810029077, -3.5300265369018966};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 7);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements61) {
  S21Matrix matrix(5, 1);
  double *arr1 =
      new double[5]{-4.120270460275312, 2.332799363767643, -1.5761568920688642,
                    -1.333269303839443, 4.096734146800436};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 1);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements62) {
  S21Matrix matrix(8, 2);
  double *arr1 = new double[16]{
      -2.4487527656894637,  -4.723717132780858,  -4.550564613533751,
      3.54716469688692,     -4.973912394577949,  -1.8044388042956685,
      -4.389524563528465,   1.1774692345591484,  1.112761133450042,
      -4.48101052235598,    0.20196959071560627, 0.7702675210977503,
      -0.13601317699262427, 3.231739600329913,   -4.359161538610751,
      0.02443223851591103};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(8, 2);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements63) {
  S21Matrix matrix(5, 3);
  double *arr1 = new double[15]{
      0.7835190301477155, 3.5020474698351727,  1.5971959051099098,
      4.55374553037341,   4.018470177425051,   -2.084038483601719,
      2.5906567691429387, 1.1603231918134291,  4.248506187892065,
      1.2522588052968953, -4.8943192110775975, 3.614127429039124,
      4.310711301625155,  3.7432058265934263,  -3.8926886918043158};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 3);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements64) {
  S21Matrix matrix(2, 2);
  double *arr1 = new double[4]{4.229362023176659, 0.5344952699163059,
                               2.2094096108702406, -4.153980488941268};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(2, 2);
  double *arr2 = new double[4]{-4.153980488941268, -2.2094096108702406,
                               -0.5344952699163059, 4.229362023176659};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements65) {
  S21Matrix matrix(8, 2);
  double *arr1 = new double[16]{
      -0.5232115723917383, -2.7710036980602117, -1.513894199187095,
      1.7273440433231713,  1.6895387870225997,  -3.385473775341853,
      -4.097226881421402,  -3.5525838723177006, 2.2771544091084186,
      2.2385720329290812,  4.648741326294205,   -3.5181763045118175,
      4.371100579521961,   -4.763797800668529,  4.897577121316877,
      0.6928559758799864};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(8, 2);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements66) {
  S21Matrix matrix(3, 3);
  double *arr1 = new double[9]{
      -4.127274686569055,  -1.8608935961006203, 4.611236847225243,
      4.237291724028992,   -0.3914972594510626, -0.4433252185415597,
      -3.1826556158153965, -1.3454670186965134, 0.3336736558007827};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 3);
  double *arr2 = new double[9]{
      -0.7271117819011161, -0.002921123827271922, -6.947137214644959,
      -5.5833359240724985, 13.298816014514776,    0.3694714861848941,
      2.6302676485423375,  17.70943077788079,     9.500965762849237};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements67) {
  S21Matrix matrix(8, 6);
  double *arr1 = new double[48]{
      0.2647001100491515,   4.917697339083416,   -3.127476295055356,
      2.3527935083723435,   -2.5047360718861658, 0.39263615022945153,
      1.8574000850492611,   2.1089412793177136,  2.9844905288595704,
      -4.410458552969273,   4.299859903492491,   -0.7714261428596538,
      0.8049971013469657,   4.845739512502657,   -2.565121665449933,
      -2.4143909681972655,  2.115977056971275,   0.5559468235910323,
      2.67636827473686,     -1.6816324639922087, -1.5642479363801574,
      -0.27965389586183065, 2.0382113169078018,  4.919216035669482,
      -3.8889764781676774,  -1.484969336800448,  3.2323733624221838,
      -3.21893542858388,    -0.4866298854494886, -0.7310784552409499,
      -0.7078125052765492,  -2.406692928716978,  -3.210724884282381,
      2.113451457288031,    0.6252483956309698,  -4.253275331874732,
      -0.6472982894251667,  -2.6539213996307085, 0.7568511511181564,
      0.20895061741370125,  4.2633656428593305,  -1.6868763131651265,
      -2.9537004701720306,  -4.79393082723165,   0.3038050691251337,
      3.22845256356368,     0.4010272216330648,  -0.610190121598051};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(8, 6);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements68) {
  S21Matrix matrix(1, 5);
  double *arr1 =
      new double[5]{-4.437003105877613, 0.45343533202200437, -4.34554700060957,
                    2.496461244354915, 0.796848064200316};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 5);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements69) {
  S21Matrix matrix(6, 4);
  double *arr1 = new double[24]{
      4.5470261278537745,   3.069127552063014,    3.919416016953626,
      0.005124630656280438, -4.5537424310101855,  0.5811641148904734,
      2.6834185659960177,   4.666905532127817,    4.564232202703103,
      1.144264086498934,    0.26540259132086597,  1.2649267634507684,
      3.959306331276588,    0.8737265512473344,   3.3955605246462532,
      1.51467221525213,     -0.09964796194049885, 4.98395543406671,
      0.4226619964151812,   0.11107238863733038,  -0.4337800399216576,
      4.182625967568255,    4.493964610120326,    -1.8640606854691102};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 4);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements70) {
  S21Matrix matrix(4, 2);
  double *arr1 =
      new double[8]{-2.357665344092826, 1.866556443105523, -3.333886938245864,
                    -2.478106712255567, 0.959661747896944, 4.646166337850449,
                    2.5106639276047,    4.784147472257786};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 2);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements71) {
  S21Matrix matrix(1, 6);
  double *arr1 = new double[6]{2.567271590150506,  3.5600178665430793,
                               -4.902989773793972, -0.7136389502839648,
                               2.900544496463117,  -0.794875001837041};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 6);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements72) {
  S21Matrix matrix(5, 6);
  double *arr1 = new double[30]{
      2.2082031183288358,  -1.597593540079918,  1.4982086989165921,
      -2.790298295355128,  -4.625340367415825,  0.8360309396284835,
      1.6258862267837557,  -3.8014474261925946, -2.0948637328801976,
      -2.0957781853667057, -2.9991381383174156, 3.5206563253284546,
      1.3525586516649728,  -4.702125397628497,  -3.454693172941361,
      -4.844316754853346,  -2.357099687964068,  -3.0656941571606056,
      2.1078357529172482,  -2.1099426063553195, 1.1110010569486999,
      4.456490782261964,   -1.0637087773911382, -4.379441903859482,
      -1.5259698959143773, 2.9198298335533526,  -1.5009967647943743,
      4.021267966643492,   -0.3907989443461588, -2.1592506922666557};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 6);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements73) {
  S21Matrix matrix(6, 5);
  double *arr1 = new double[30]{
      4.099295816046837,   3.127346789519388,   0.8478772718053831,
      -3.7819528719057494, -1.9626179315806969, -1.5991519954202769,
      -0.9357597471591852, -1.7933941800412692, 3.827660745252224,
      0.6450069915254755,  3.3869742329121717,  -4.725282772909294,
      0.3205905057796885,  1.022691049023389,   0.9697000561626856,
      -1.6725595054255447, 3.9529984397458904,  -1.3608373129955331,
      -4.823546714644497,  -3.559364092102623,  3.7513337134762974,
      -1.3976462763949717, -1.9527929939771207, -1.8901554763860684,
      1.4041086644337044,  1.4302045894905184,  4.831077295148628,
      2.8088007951885157,  -3.8795507944788463, -2.84872312697223};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 5);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements74) {
  S21Matrix matrix(7, 4);
  double *arr1 = new double[28]{
      -4.150764058378046,  -3.0844951544363775, 3.8435555211435997,
      1.7223981007301798,  3.0892962563240207,  -0.8215801647212686,
      1.6133616356871636,  -3.9391503604465674, -2.518499658122959,
      4.517352319383024,   -1.6634272120105944, -0.6766513647494445,
      -1.7213909731571073, -1.92582004756248,   -4.984188627738687,
      1.9057867641542785,  -4.483305116428302,  1.7621770223788769,
      -2.7594277705492134, 2.4787341351129495,  3.0307733978671703,
      3.6924314698674117,  3.8746758810738093,  0.9754454350015953,
      -3.5957080906440098, -0.7164126440953744, -3.7885507212444103,
      4.27544533827842};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 4);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements75) {
  S21Matrix matrix(1, 8);
  double *arr1 = new double[8]{2.218974053545786,   0.09982755735980753,
                               4.5465102379737115,  2.59632772666723,
                               0.9241273906201819,  3.994337867772961,
                               -2.5494002178873263, -1.1075436488523138};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 8);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements76) {
  S21Matrix matrix(4, 4);
  double *arr1 = new double[16]{
      3.988618690035196,   -1.3718490808704065, -3.2738240029487575,
      0.45864540119080477, -0.6551725569776101, -0.4770570456188574,
      -3.2638243624128735, 2.3692034511717806,  4.570013647577252,
      1.508884658083173,   -1.0188278649494387, 2.8690715204888138,
      -0.8495638121909641, 4.877697946973054,   -0.6550812546842142,
      3.527914968019255};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 4);
  double *arr2 = new double[16]{
      -18.0513231388959,   -52.556926750321104, 70.38470749088393,
      81.38766605908327,   24.209695031857347,  52.152451333541805,
      -1.6869937244291346, -66.58928689925972,  -22.23110368021236,
      41.78898347102555,   -54.86765392651364,  -73.31910037374634,
      4.167926351115539,   -62.17563611001372,  36.603612444283975,
      39.05833738965884};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements77) {
  S21Matrix matrix(6, 7);
  double *arr1 = new double[42]{
      -4.773192957177899,   4.593472858097588,    -4.70820816908957,
      -1.6823041240986694,  -0.09027790028011662, -0.9354087268008984,
      4.252455913136469,    0.46018723554058116,  0.025654117430838674,
      -1.4013162754040942,  -3.2125101556903957,  -0.6209976027219168,
      -0.22482178946924414, 0.05250408495510861,  -4.190163725327723,
      0.026445897826729237, -2.8825532032367507,  -3.817422096637703,
      -1.7615021075889201,  -1.3232695906599465,  -4.019688007925359,
      1.6330771197305358,   -0.685736597596347,   0.437506343929309,
      3.3912016449228073,   1.3298753762316249,   1.5979464280070825,
      -2.783413045999236,   1.5240371074006474,   -0.7817893775520677,
      -2.953453088700866,   -0.38728737629501353, -1.1260951429669297,
      -4.101728550839475,   -0.2065877795433213,  2.6608289128482117,
      -4.010670525022489,   4.115451308283843,    -4.002748991750709,
      1.170025867196757,    -4.334151121275111,   3.1323578517373605};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 7);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements78) {
  S21Matrix matrix(6, 6);
  double *arr1 = new double[36]{
      1.8530020242228575,  -2.8366927226663785, -0.7503858255338152,
      -2.890765082732545,  4.990957791691711,   2.63448424582646,
      -1.950249118213021,  2.0921252553421876,  0.7287437709485403,
      -2.92885658242402,   2.008535621916174,   -2.414188032650082,
      -2.0108498829403745, 3.1919125886206494,  -0.3300354228935163,
      -4.85512568640309,   -3.4799053729580565, 1.540169963612927,
      -4.614885028828911,  4.203131736206149,   1.0861247517644523,
      2.2139150253462176,  1.274874614774327,   0.3795828027114343,
      -1.358551947916565,  1.2941005656598836,  0.7031415225023956,
      4.2853016286328085,  3.0034230385655487,  -0.4137708349885134,
      2.3266191774822698,  2.8592898017313395,  -2.7334337414652508,
      -3.9811687861557576, -4.153317945640575,  3.18607849109965};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 6);
  double *arr2 = new double[36]{
      44.616032961229216,  48.66401119728493,   47.638356428239675,
      37.64489374351333,   -78.06538817977142,  -90.10840144780748,
      75.97228941830743,   -28.777898321505866, 337.2189631320541,
      55.295891608770674,  -80.18946356793852,  224.21964786438028,
      -1328.7543400508996, -735.4744553369826,  -3036.6529615461914,
      187.2876215745531,   70.07368445279484,   -649.5093603269734,
      1436.7645316472901,  716.6296809582224,   2752.99468774231,
      -147.4573846007745,  -31.86316120338509,  443.7687728562703,
      -1943.2242950736747, -1133.7993523627267, -3798.5734448528774,
      114.63438224499399,  -40.98349805336896,  -732.5568617197337,
      239.4661759826255,   60.865552918695556,  862.7661964928136,
      -47.3090408996581,   -31.61217166467221,  150.82602159265875};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements79) {
  S21Matrix matrix(6, 6);
  double *arr1 = new double[36]{
      2.458034467418356,   -4.939196344400301,  0.39394000664694584,
      4.782195212706901,   -3.8567599968749864, 3.163417433678525,
      0.8368275357043657,  -1.4750905984518283, 3.8394192011824053,
      2.397704065287031,   -1.2145914879848387, 0.8071008574602185,
      1.5697025061704544,  4.380053966247768,   4.652668391725381,
      -1.3256409117786152, -1.2051442593518713, -2.270557139962075,
      -4.992695385926015,  4.593454791363756,   -1.5511004763932523,
      4.012950175547731,   -0.5414659527393217, -0.36574927585135875,
      -4.974836159349108,  -2.995974342228366,  1.2603005156476002,
      3.276547088844872,   -1.1351878670679474, -0.6878398113705426,
      1.734393340375827,   -3.8581542225643926, 4.0656120084337015,
      -0.214333399125465,  1.0639189543848424,  0.6511854321619062};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 6);
  double *arr2 = new double[36]{
      -828.6955496438524,  228.2909319981962,   405.7536153281788,
      -1065.7343590994924, -585.1475544711695,  1631.7256942547608,
      2238.577767749296,   -645.2676931336232,  -1144.4549082569922,
      2901.792334431041,   1859.823185713327,   -4723.627098663836,
      -705.222388687889,   167.33427731843472,  296.92731692796553,
      -881.259818528936,   -483.22324070810356, 1515.3443267309315,
      -732.3046354255054,  133.13176887716278,  339.9932959432559,
      -1067.8096717497158, -730.3603474678698,  1458.3300639414108,
      82.73024387652552,   71.4068383285211,    -7.442979862413093,
      40.900167203974405,  96.86370356577477,   104.39917323946243,
      -1531.7150880332854, 424.40744667772776,  665.779084236745,
      -2048.6408143894755, -1455.3257828140781, 3092.579911315373};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements80) {
  S21Matrix matrix(1, 1);
  double *arr1 = new double[1]{-0.6843646146584241};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 1);
  double *arr2 = new double[1]{-0.6843646146584241};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements81) {
  S21Matrix matrix(2, 6);
  double *arr1 = new double[12]{
      1.477145129108079,  -3.5784747304570583, -4.360659428922751,
      1.7239334724919857, -2.6877054789594332, 2.183988676858596,
      3.7535520003882965, -4.365023887099825,  -0.01568078805364692,
      0.7413444325153984, 3.2984033805999715,  -4.457171929954704};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(2, 6);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements82) {
  S21Matrix matrix(3, 3);
  double *arr1 = new double[9]{
      3.504898826516097,   2.989403119050472,   0.06829065601587025,
      2.5023542209804353,  -1.9540781941494578, -0.8768907685518244,
      -2.9453866052554325, -0.7636595666047281, -0.325774161529373};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 3);
  double *arr2 = new double[9]{
      -0.033057839010102154, 3.3979846721540747,  -7.666462478554967,
      0.9217194818057278,    -0.9406630929603143, -6.128398385709368,
      -2.487934716790616,    3.2443008370149236,  -14.329391882763149};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements83) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      4.296900736312248,   4.060833922326966,   -3.978259546794418,
      -0.2101455958884415, -1.3169580412230095, -1.7135709410596336,
      0.9934394490244225,  -4.888857779869373,  4.419295158276537,
      0.09778543108648208, -1.9056042679977891, -1.9727780664806538,
      4.516198842056639,   -3.476002865258816,  0.9481354624724228,
      -2.96210137311671,   3.6785072844331204,  -3.778171718293082,
      3.9903556787587675,  1.1163613755475357,  -3.513776553832928,
      0.9397765048659767,  4.679835168496805,   4.578168162910494,
      3.1689991890986526,  1.0198202540681915,  -0.5281981621520018,
      4.142680494528971,   4.958821805006098,   -4.142238044900739,
      -1.9716660813919775, 0.5817994754782241,  -1.0038631996869238,
      0.12315617398430145, -3.6355106602934595, 4.9005072223351345,
      -4.2687790437865445, 3.513404173670784,   -2.934752769796419,
      -2.3850022736042744, -1.1617284287050245, -3.2945509693058406,
      -1.1139254828700484, -3.973815537688845,  -1.1354788641284475,
      -3.631264325673725,  -3.529381415905691,  1.733505756535811,
      -3.358488713700215};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      13708.496608884137,  7266.845439389552,   -8542.866977294972,
      -17162.951514369404, 1533.4218869688877,  10767.425152656999,
      12246.423230330718,  -6420.511022241964,  11982.327153918306,
      3885.382920325094,   7862.038553065759,   -3328.8852219701107,
      -8243.58476316337,   -22619.070591044783, 11622.221521002837,
      -2160.057052938084,  -1373.666021832175,  -16166.64560703897,
      15617.391229626142,  24728.621115128153,  12996.913837376413,
      22633.012220973877,  -6136.546391502694,  5553.723179735365,
      -6276.760737874179,  -3839.9817330739747, 54343.35821358384,
      36747.999285238155,  14567.191157993171,  -5877.227680618777,
      -4263.66835113713,   15441.254096362078,  2158.291330351336,
      28567.201647720085,  -654.3840431585445,  -10880.515398851045,
      9021.272703846158,   13349.663275158326,  5626.11527679996,
      -11096.062967045593, -46434.05120494736,  -29968.366035160216,
      21362.870245736784,  -18049.054147486724, -6740.8002075132035,
      -26276.051688672185, -8628.646037483906,  67503.81846444409,
      53823.75960699984};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements84) {
  S21Matrix matrix(4, 4);
  double *arr1 = new double[16]{
      -1.4939529365767767,    -0.00995633009302388, -1.889670202741164,
      -4.736572796814907,     2.6799679971074983,   -2.4275444854358175,
      -0.0005126936723245379, -1.919732594201351,   3.333585331351692,
      4.817879469923694,      -2.843785766405568,   -3.4602584477792164,
      -0.985286476410109,     -3.4494049097397106,  -2.005926969033963,
      -3.1428793244773456};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 4);
  double *arr2 = new double[16]{
      32.52342515666278,   -23.55993554086352, -93.31578941598879,
      75.220045243051,     -41.05043837943704, 15.72111343081411,
      -72.29560834715456,  41.75714461427482,  -21.114004756542904,
      -11.725297131543577, 53.50742022831373,  -14.662776288392061,
      -0.6948383129919227, 38.813317905461524, 125.88321781162476,
      -50.0839232008124};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements85) {
  S21Matrix matrix(4, 6);
  double *arr1 = new double[24]{
      -3.910488914810574,  -4.372332256476178,   -4.332201583706126,
      -1.3363638911586517, -1.9136466128187193,  -4.977262343717461,
      -4.397690435531571,  -0.34040438427850095, 4.2467833741165215,
      -4.804678294116785,  2.1429114494845773,   3.4753965826143016,
      3.786145012407017,   1.0117790066778687,   3.325078027508088,
      2.4976776914145535,  -3.5791849223531624,  -0.5508887865054053,
      4.959838700112385,   -0.365515379438607,   -1.366668983432767,
      -3.4745495673638107, 4.225693337164669,    2.2218973823728145};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 6);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements86) {
  S21Matrix matrix(3, 5);
  double *arr1 = new double[15]{
      3.3583694297605042,   -4.878579229705679,  3.8515862493017536,
      -4.216080759055886,   -0.8311344900055397, -1.2645443707479709,
      2.653102728803322,    0.6283696183343954,  1.5683311993048124,
      0.9796106034105563,   0.9809647114554165,  -2.6356220061855087,
      -0.07457693197982085, -4.4746203935666475, -0.3487709687756366};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 5);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements87) {
  S21Matrix matrix(8, 6);
  double *arr1 = new double[48]{
      -3.618549809337469,   4.706489771265549,    -3.4785795204321754,
      -3.831567979489013,   -3.1067796608575726,  -2.22499146716715,
      -4.806976311734745,   0.004761216048470018, -0.41255177316090386,
      0.40778005106719384,  0.701286113791701,    -1.5840544031903656,
      -0.30717600288080504, -1.9099007585571282,  -2.459101589791386,
      -2.8314868035602747,  2.4219589512815567,   2.08539733609809,
      0.01568034630865256,  -2.442655108769155,   -0.41418611156683216,
      -2.693988201580538,   0.4804493197893125,   -1.5380930624770461,
      2.342985033388306,    4.249719551715035,    4.758620406373078,
      2.3069374093797297,   -2.4651790105981073,  4.129612457899313,
      -0.518130757283223,   -4.518617439982772,   0.4173578199292285,
      -2.8764750681381823,  -4.00530669419913,    0.36360277405605146,
      0.09845162984059819,  -0.5955848633500205,  -3.728492006779204,
      -1.3660623548340736,  -4.1859445691179,     -4.607426981946575,
      4.52480414528261,     -0.8600282450155481,  -3.8031701703299534,
      0.8329833409695544,   1.0596982088779736,   0.6397755488509365};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(8, 6);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements88) {
  S21Matrix matrix(5, 2);
  double *arr1 = new double[10]{3.2818366768104426, -2.3551270804931255,
                                -2.734745392454797, -2.8205890827953537,
                                4.52383693413846,   -4.812637108286969,
                                4.432214781497631,  1.0946915824154875,
                                2.367272614324424,  4.487300975774026};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(5, 2);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements89) {
  S21Matrix matrix(4, 2);
  double *arr1 = new double[8]{1.9422177644794845,  -4.544725033432062,
                               -1.4898140679953964, -3.0776265043451745,
                               1.7143557551328215,  -2.806916370911382,
                               -4.886728589311387,  4.676268160411222};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 2);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements90) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      3.9056441466336693,    3.7710325186849776,    0.3094722033064148,
      -0.2653610122713097,   -3.845973628680998,    4.556437417922515,
      3.0884126829589036,    -4.848321990408485,    1.920906286240637,
      2.9190443909464614,    -0.011084896358735108, 1.4419313215854057,
      4.5054092960508125,    -0.7093444826159869,   -1.3186722285842176,
      4.277494719913827,     -0.11644270129246426,  -4.664562964408445,
      -2.3045206960537112,   -0.37972926387853523,  4.270361473168485,
      1.532159127907418,     1.730096849221657,     0.21432009099716431,
      2.129106649803397,     4.671775894412592,     4.7569847567804295,
      1.3626832718575246,    2.939146442691878,     2.0119159704331047,
      2.3581243430855228,    -2.288545786101712,    4.300627161178458,
      3.0503136376631836,    3.2430880958760344,    -3.041984462640909,
      0.5814174618665904,    -4.1334553292285925,   -1.1782797276396693,
      -1.051226716007788,    1.3739110877825977,    4.947070455728184,
      -0.08179870860755756,  -0.682866245321093,    0.9820310863425448,
      2.5915587920600958,    -3.4055737546956966,   -0.9628727771092187,
      0.00032515954526424196};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      -8470.269519720927,  4266.7801147816,     4767.627380956676,
      8482.013729605822,   11880.879179612715,  -16633.53624871194,
      7437.987533914926,   10233.950801439922,  5985.804072304548,
      -8683.617859303446,  5500.77735195948,    3711.2094845199495,
      -12290.480735153122, 3846.0593448827494,  4564.958567838287,
      -34742.577131145816, 665.743719037181,    -8658.125796905651,
      -5410.439912610824,  20762.88693510153,   -1531.6858241759353,
      1032.5396680957913,  -35907.507922467055, 10657.581173901748,
      -27233.974707148394, -14468.955181242547, 14122.715268775031,
      276.5494893886059,   -4260.750640311433,  27865.240853462863,
      -20582.846931603028, 10858.813194373472,  -1565.141572876647,
      -5636.791507493927,  -19273.406935004685, 5323.218041863911,
      19808.202367386468,  5762.8861083664315,  3352.08199949784,
      2796.6923137889307,  -9496.722386696185,  -13714.062876472137,
      5202.362998055329,   1042.2481104273959,  -22662.55118180696,
      -26072.59510706969,  3270.564142838423,   14717.414444105014,
      -25461.17801878145};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements91) {
  S21Matrix matrix(3, 3);
  double *arr1 =
      new double[9]{-4.297196001117643, -1.4942391147027,   0.06359259329134037,
                    -4.183974758290057, -4.167251437572647, 0.23251772178145025,
                    -4.695209144985771, 3.693642257814279,  4.1386872404119455};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(3, 3);
  double *arr2 = new double[9]{
      -18.10578763513292,   16.224443612661187, -35.02022303199463,
      6.419076648009399,    -17.48616973379997, 22.888069895986227,
      -0.08243074893509213, 0.7331044190830591, 11.655637474423147};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements92) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      -2.6716183628477355,  2.5648392360324603,   2.799584004569309,
      4.102144164737014,    -2.307007440811424,   0.8796127599612351,
      2.3855185880655796,   2.5505163381563642,   0.7207782457261578,
      3.118838105416163,    -4.3755018371572705,  -1.9818450201833393,
      -4.167506424892312,   -0.35728551478484327, 3.419640064109611,
      -3.881859481567429,   -4.110940890568479,   -4.493641882068504,
      4.182716345323708,    2.6640807024194038,   -1.101749231711179,
      -1.272308653814882,   2.084937366514148,    4.603059137493133,
      -2.9437774133455905,  0.40104278265864224,  3.275912450618314,
      -3.937016212405533,   -1.4722112826399925,  -3.7239608847052805,
      -0.32415514895397646, 0.3283167609324824,   -4.058984975195044,
      0.09884189038657976,  0.43165590702507384,  -3.241656716316662,
      1.4401008673827143,   1.8819636992122257,   2.317821630710988,
      0.3120547803591247,   -3.2169727056157416,  -4.154510586616263,
      -2.850308148909382,   0.11755066059360786,  -0.6025197711443351,
      1.5782738363135627,   1.3836652678567276,   3.22581184683213,
      2.736239549497821};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      13209.521104802783,  -20402.764187443325, 25495.662660532482,
      16014.573919043882,  13626.601736709737,  -12.966922502227371,
      4138.1593157446205,  280.33540886482007,  -6120.381263783145,
      8346.826239692939,   -522.3033137198429,  5177.930933829146,
      -3614.758611446538,  4337.328803416858,   9217.601494821174,
      -18829.428777247766, 19555.030469764468,  10625.468814216236,
      13496.62526775853,   -785.6024771203739,  2689.166474274782,
      -1331.9472151388868, 3116.059693295207,   -1341.457901023347,
      -2618.505318306818,  -2667.16980567967,   2945.7939386567045,
      -2430.4882638242566, -1505.3938245664203, -4583.873791155234,
      1218.7441889186182,  -77.88983960430966,  -2249.4472921901083,
      381.1793842115207,   -369.80709929589864, -11.980915093397684,
      -8502.760929709335,  8430.52185125723,    4513.433076514973,
      7402.441514135794,   -3418.4468111136666, -107.35769658129014,
      -9465.462728066734,  1703.4197137120304,  -2586.091059961532,
      -6654.184885080541,  1987.1076663851386,  -1788.9436206858081,
      4626.731047830216};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements93) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      -0.2629121551532423, 0.29310591053499646, 0.15983064354164966,
      -0.4241311249070865, -1.961783197627014,  1.1069711002466276,
      -0.9068474312851817, 4.173348922562196,   4.286575034080183,
      4.366945579427766,   -4.546835946705538,  4.422042862852168,
      -3.6508529574785973, 0.47678938238659185, 2.148578224811547,
      0.9640644251039721,  0.31181629141666534, 2.1979038234381,
      -4.672026382145189,  -3.882717591805893,  2.250716346701962,
      -4.078411351976006,  1.325305815425116,   1.3133494380872834,
      -1.0546341431820148, 2.61641550227922,    4.750920905942676,
      0.42437243165396676, 3.731405681772438,   -1.8264556113103336,
      -3.548003159538906,  -0.9582363444345585, 1.9416410037926468,
      -4.963811245415297,  1.3569405397238885,  2.6321089415197125,
      -1.0613889992112266, -2.6074603009470954, -4.963091654710166,
      4.436550983455822,   -3.236036915108148,  -3.2451290159964996,
      -0.9085492286167742, 4.52118452946538,    3.0488023825818082,
      2.693960094418131,   1.2072695561084155,  1.4925089097047293,
      4.993415810243198};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      4349.570727164103,   1491.6633569357373,  -2408.725449059189,
      -2321.524384861213,  -2017.7409254147567, 4461.747812585417,
      1318.1947696540726,  683.6277371034159,   -1286.5219797324435,
      1520.6095371206902,  -1107.6793505514595, -176.02538016385157,
      294.899030702934,    912.8199088233146,   -3525.9944907601757,
      1077.7715564624211,  -275.96707136849074, -997.0943217752341,
      -944.5569915293654,  -2970.7395112461854, 205.3399603932669,
      -3055.049592875607,  -913.434503285294,   243.10380780729173,
      -2997.2827345727733, -834.0762769242893,  -1249.0700711606357,
      2314.794351204439,   1707.8271236960086,  -1963.4060740760676,
      -246.75854929574248, -2065.146469294648,  -543.5482568248983,
      1655.8505792441213,  2989.765823806139,   -1691.7931891579194,
      3682.376974467612,   -2374.7042220074063, 1224.0688022183094,
      552.4085392027648,   -1632.4340721591827, -2498.060628307515,
      1010.017195307987,   2912.2355684066697,  -1955.131555386292,
      1745.00671753325,    653.70729464756,     716.4499978200228,
      -1051.8819901923357};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements94) {
  S21Matrix matrix(6, 6);
  double *arr1 = new double[36]{
      -4.645248979316897,  -4.9321348509926,     -3.5970742640822175,
      1.7616308131951728,  -0.07520187600838835, -0.9071327380445835,
      3.4617200274598527,  1.8729973741545471,   -0.637206928301385,
      4.4960664721459285,  -4.547968332903633,   -4.303328566151112,
      -4.335060648211617,  -1.1383743375875257,  1.9879302238222927,
      -2.763093002570125,  -3.737639258241666,   -3.0654058885144684,
      0.20595175208884964, 4.0622909995203695,   1.6339027546032838,
      -2.546877412671132,  4.4201888253052175,   -2.929443681967565,
      -0.3322275452559147, -0.5162750047407769,  -3.034103660002808,
      4.2880785274423125,  -0.03102109691766497, -4.023652408023647,
      4.192805293807639,   2.4573506121498845,   -0.11120158423329496,
      -0.5274935605606599, 0.4086600613146141,   -3.2030366515026065};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 6);
  double *arr2 = new double[36]{
      1148.3467952340825, -3137.5073240464267, 3901.00052806044,
      1461.9525603139048, 1509.6282449484347,  -1087.4693702411412,
      1063.201266835299,  -2937.15477661821,   3500.028983523375,
      1266.7292154997338, 1415.7986911611317,  -1011.1164600173191,
      -411.5510366543967, 1198.8641764412084,  -1461.9195688104446,
      -506.8051915898156, -538.276611101216,   446.5788258256845,
      782.1151145603607,  -2089.8408611313034, 2451.3525605376744,
      899.717615292984,   936.6438760509989,   -693.290824030589,
      -1422.620058066744, 3974.3829413095514,  -4830.099310282399,
      -1841.65266512038,  -1926.1365942793907, 1412.1358740348492,
      -287.9985599557932, 606.0523755709761,   -582.4415688704422,
      -140.2654358161405, -251.56914778410456, 237.6731655374217};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements95) {
  S21Matrix matrix(6, 6);
  double *arr1 = new double[36]{
      0.4454459545088598,  3.2172843476369692,  -1.0393320880124612,
      -4.975654694761146,  0.6052486447017715,  -4.121508565950526,
      1.3482102907407398,  -2.9621629540439187, 0.9626173352842438,
      4.255214025337015,   1.2512878692066423,  0.6798731179749504,
      -0.6083249062000098, -4.1809776668955685, 3.8056071385278774,
      -4.856453076402241,  1.4459893755134887,  -4.1857635464335585,
      3.0152061649268997,  1.6079133365625653,  -1.0927744020210453,
      4.466379891072247,   0.40102431375488123, 1.0866432435444118,
      -0.4353732177703593, 4.714896146575892,   4.093247917372651,
      4.1946067333731865,  3.9114351929371622,  -1.2241089844141118,
      -1.064063010584407,  -3.442061893668291,  -0.3030244390695298,
      4.8138670529336665,  1.4412380014690482,  0.1148185669033932};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(6, 6);
  double *arr2 = new double[36]{
      199.5520999977491,  -95.8857908303401,   -683.9068430881211,
      -605.0855179681017, 1736.0840269134114,  746.7577950451288,
      682.5266779142921,  -446.5334987068341,  -1254.3145719493355,
      -1691.984500791399, 4605.2135597664965,  2760.4171149739304,
      -80.29976214993577, 61.252729590442414,  671.0710996771602,
      653.0327964772952,  -1858.182417565638,  -1191.334554851701,
      -14.44111738364963, 253.80829237320665,  874.6216745081153,
      1222.695182104052,  -3148.1846885778004, -1962.3943689213145,
      -68.98999718050095, 94.41127008747222,   104.30028718961893,
      14.504954480084791, 144.54780855981934,  43.65626531460275,
      -404.5565305068515, 39.64580319209111,   176.4956562083295,
      688.326770502545,   -1355.9831963240774, -1087.387565498809};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements96) {
  S21Matrix matrix(7, 7);
  double *arr1 = new double[49]{
      -2.923494888194491,   2.9387129005778823,   -4.629776848242968,
      2.4542528549902958,   2.4118520709622837,   2.97602765480336,
      0.15310539761734532,  2.1813563169602377,   -2.7306447239733735,
      -1.9935598599072488,  -1.1384664809860556,  -4.922300960420833,
      1.8401143254214336,   -3.560944089319329,   3.377281862227507,
      -1.3177945166319893,  1.6150371116514624,   -4.53600016726328,
      3.9608471200471165,   -3.4015015331566345,  4.955985484148245,
      4.691003732321626,    -0.20619926417406553, -2.0290713232296387,
      0.4323273534215053,   -2.5378075892563134,  -1.5003430133488358,
      -3.9440634370496674,  1.33670978189115,     -0.5305753750520683,
      -2.6215431743885764,  4.569934923992308,    3.369830737788986,
      -0.43546231669466806, -4.444339420152859,   -3.1485977118692308,
      1.1050910936033098,   -0.40165674411381147, 4.31568874510384,
      -2.570380374314082,   4.280342751684852,    -0.6982927928348728,
      3.6066664329562954,   4.643546452852014,    0.8371562817702962,
      -1.0014352757199707,  2.519846622728105,    -0.4733156794292448,
      2.415502059421283};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(7, 7);
  double *arr2 = new double[49]{
      -2919.354785630381,  2198.4064237374423,  -13867.866066842738,
      -1437.585234261661,  -1066.9528189520563, -2394.051986194556,
      4986.985730581866,   5701.53262402147,    -4898.146790554328,
      3886.0729820364886,  -12200.12037482702,  7341.7596563416655,
      21059.08769394933,   -9034.207727592819,  8991.242295313918,
      -11524.239028837012, -8158.387186801533,  10857.781593349237,
      -2303.3824232552092, -511.64399355799117, 18360.62991374847,
      3237.4405884692046,  2216.9562006762303,  -14670.383749258786,
      14905.517215374382,  -16067.813939471524, -21855.410282048597,
      14647.607290686588,  4473.655590071878,   -5246.439221451636,
      5670.843420001058,   1756.5998980639642,  10709.927393025528,
      8645.242830623749,   -7309.704257585167,  9006.36602479717,
      -7441.845533697745,  -2056.3398840572263, 19506.244106645914,
      -8039.558880159615,  2472.7975295987226,  18529.557929105817,
      6263.516499296299,   8100.0215496017145,  9232.235440501605,
      -6962.755868120111,  6762.399842983696,   13182.552181756248,
      -7852.589951382097};
  expectedComplements.fillMatrixFromArray(arr2);

  S21Matrix result = matrix.CalcComplements();

  delete[] arr1;
  delete[] arr2;

  ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements97) {
  S21Matrix matrix(4, 1);
  double *arr1 = new double[4]{-1.7616681964177525, -1.186496336053311,
                               -1.8707509784130494, 1.8710434422641677};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 1);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements98) {
  S21Matrix matrix(1, 2);
  double *arr1 = new double[2]{-1.2076305154997815, -1.1534356195768805};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 2);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements99) {
  S21Matrix matrix(4, 2);
  double *arr1 = new double[8]{3.8401102340133484,   -3.67017091385733,
                               -0.01755705561278731, 1.2872950403116112,
                               -4.822147317382257,   1.6212292124226888,
                               -4.960343393495082,   -3.096273295935413};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(4, 2);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}

TEST(MatrixCalcComplementsTest, CalcComplements100) {
  S21Matrix matrix(1, 8);
  double *arr1 =
      new double[8]{-4.747063723697291,  2.949215259873739, -0.1990528792576285,
                    1.09328976941475,    3.757757031988536, 4.468652268652097,
                    -0.9970059820146693, -4.453713357665642};
  matrix.fillMatrixFromArray(arr1);

  S21Matrix expectedComplements(1, 8);

  delete[] arr1;

  EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
}
